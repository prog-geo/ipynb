# -*- coding: utf-8 -*-
"""exercício-01

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ds3Z97mArItFBcTrg17n2eb-OGbUWlHY
"""

def printSquares(n):
 
    # Initialize 'square' and previous
    # value of 'x'
    square = 0; prev_x = 0;
 
    # Calculate and print squares
    for x in range(0, n):
         
        # Update value of square using
        # previous value
        square = (square + x + prev_x)
 
        # Print square and update prev 
        # for next iteration
        print(square, end = " ")
        prev_x = x
 
# Driver Code
n = 21;
printSquares(n);

#Série Triangular

def triangular_series( n ):
    j = 1
    k = 1
     
    # For each iteration increase j
    # by 1 and add it into k
    for i in range(1, n + 1):
        print(k, end = ' ')
        j = j + 1 # Increasing j by 1
         
        # Add value of j into k and update k
        k = k + j
         
# Driven Code
n = 20
triangular_series(n)

def pen(n):
 
    pn = 1
    for i in range(1, N):
 
        # Calculate i-th pentagonal number
        pn = (int)(i * (3 * i - 1) / 2)
          
        print(pn)
 
        # Check if the pentagonal number
        # pn is hexagonal or not
       

# Driver Code
N = 10
 
pen(N)

numb = 21
# variável 1, 2 e 3(=0).
temp1 = 1
temp2 = 2
temp3 = 0

print('The first', numb, 'numbers of the pell series are :')
print(temp1, temp2, end=' ')
for i in range(numb-2):
      temp3 = temp1+2*temp2
      temp1 = temp2
      temp2 = temp3
      print(temp3, end=' ')